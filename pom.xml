<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.norbjd</groupId>
  <artifactId>simplewebserver</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>simplewebserver</name>
  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.sparkjava</groupId>
      <artifactId>spark-core</artifactId>
      <version>2.7.2</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.2.5.jre7</version>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongodb-driver-sync</artifactId>
      <version>3.8.1</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.25</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.0.0</version>
          <executions>
            <execution>
              <id>add-test-source</id>
              <phase>process-test-sources</phase>
              <goals>
                <goal>add-test-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>${project.basedir}/src/it/java</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>net.revelc.code.formatter</groupId>
          <artifactId>formatter-maven-plugin</artifactId>
          <version>2.7.5</version>
          <executions>
            <execution>
              <id>format-sources</id>
              <phase>process-sources</phase>
              <goals>
                <goal>format</goal>
              </goals>
              <configuration>
                <directories>
                  <directory>${project.build.sourceDirectory}</directory>
                </directories>
              </configuration>
            </execution>
            <execution>
              <id>format-test-sources</id>
              <phase>process-test-sources</phase>
              <goals>
                <goal>format</goal>
              </goals>
              <configuration>
                <directories>
                  <directory>${project.build.testSourceDirectory}</directory>
                  <directory>src/it/java</directory>
                </directories>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>2.8.0</version>
          <executions>
            <execution>
              <id>sort-pom</id>
              <phase>validate</phase>
              <goals>
                <goal>sort</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <lineSeparator>\n</lineSeparator>
            <encoding>${project.build.sourceEncoding}</encoding>
            <sortProperties>true</sortProperties>
            <keepBlankLines>false</keepBlankLines>
            <sortDependencies>scope</sortDependencies>
            <createBackupFile>false</createBackupFile>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.0</version>
          <configuration>
            <excludes>
              <exclude>**/*IntegrationTest</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.22.0</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <includes>
              <include>**/*IntegrationTest</include>
            </includes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.26.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>create-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/bin.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>build-docker-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
            <configuration>
              <verbose>true</verbose>
              <images>
                <image>
                  <alias>simplewebserver</alias>
                  <name>norbjd/${project.artifactId}:${project.version}</name>
                  <build>
                    <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                    <tags>
                      <tag>dev</tag>
                    </tags>
                  </build>
                </image>
              </images>
            </configuration>
          </execution>
          <execution>
            <id>push-docker-image</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
            <configuration>
              <verbose>true</verbose>
              <images>
                <image>
                  <name>norbjd/${project.artifactId}:${project.version}</name>
                </image>
              </images>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>postgresql</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration combine.children="append">
              <includes>
                <include>**/Postgresql*IntegrationTest</include>
              </includes>
              <environmentVariables>
                <POSTGRESQL_HOSTPORT>localhost:5432</POSTGRESQL_HOSTPORT>
              </environmentVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-it-containers</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <showLogs>true</showLogs>
                  <images>
                    <image>
                      <alias>postgres</alias>
                      <name>postgres:9.6</name>
                      <run>
                        <ports>
                          <port>5432:5432</port>
                        </ports>
                        <wait>
                          <log>database system is ready to accept connections</log>
                        </wait>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>stop-it-containers</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>mongo</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration combine.children="append">
              <includes>
                <include>**/Mongo*IntegrationTest</include>
              </includes>
              <environmentVariables>
                <MONGO_HOSTPORT>localhost:27017</MONGO_HOSTPORT>
                <MONGO_DATABASE>local</MONGO_DATABASE>
              </environmentVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
              <execution>
                <id>untar-mongo-data</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <delete failonerror="false" quiet="true">
                      <fileset dir="${project.build.directory}/mongodata/"></fileset>
                    </delete>
                    <bunzip2 dest="${project.build.directory}/mongodata-tmp.tar" src="${project.basedir}/mongodata.tar.bz2"></bunzip2>
                    <untar dest="${project.build.directory}/mongodata/" src="${project.build.directory}/mongodata-tmp.tar"></untar>
                    <delete file="${project.build.directory}/mongodata-tmp.tar"></delete>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-it-containers</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <showLogs>true</showLogs>
                  <images>
                    <image>
                      <alias>mongo</alias>
                      <name>mongo:3.2.6</name>
                      <run>
                        <ports>
                          <port>27017:27017</port>
                        </ports>
                        <wait>
                          <log>waiting for connections on port</log>
                        </wait>
                        <volumes>
                          <bind>
                            <volume>${project.build.directory}/mongodata:/data/db</volume>
                          </bind>
                        </volumes>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>stop-it-containers</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>webserver-mongo</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration combine.children="append">
              <includes>
                <include>**/SimpleWebServer*IntegrationTest</include>
              </includes>
              <environmentVariables>
                <MONGO_HOSTPORT>localhost:27017</MONGO_HOSTPORT>
                <MONGO_DATABASE>local</MONGO_DATABASE>
              </environmentVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
              <execution>
                <id>untar-mongo-data</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <delete failonerror="false" quiet="true">
                      <fileset dir="${project.build.directory}/mongodata/"></fileset>
                    </delete>
                    <bunzip2 dest="${project.build.directory}/mongodata-tmp.tar" src="${project.basedir}/mongodata.tar.bz2"></bunzip2>
                    <untar dest="${project.build.directory}/mongodata/" src="${project.build.directory}/mongodata-tmp.tar"></untar>
                    <delete file="${project.build.directory}/mongodata-tmp.tar"></delete>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-it-containers</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <showLogs>true</showLogs>
                  <images>
                    <image>
                      <alias>mongo</alias>
                      <name>mongo:3.2.6</name>
                      <run>
                        <ports>
                          <port>27017:27017</port>
                        </ports>
                        <wait>
                          <log>waiting for connections on port</log>
                        </wait>
                        <volumes>
                          <bind>
                            <volume>${project.build.directory}/mongodata:/data/db</volume>
                          </bind>
                        </volumes>
                      </run>
                    </image>
                    <image>
                      <alias>simplewebserver</alias>
                      <name>norbjd/${project.artifactId}:${project.version}</name>
                      <run>
                        <ports>
                          <port>4567:4567</port>
                        </ports>
                        <wait>
                          <http>
                            <url>http://localhost:4567/health</url>
                            <method>GET</method>
                            <status>200</status>
                          </http>
                        </wait>
                        <links>
                          <link>mongo:mongo</link>
                        </links>
                        <env>
                          <MONGO_HOSTPORT>mongo:27017</MONGO_HOSTPORT>
                          <MONGO_DATABASE>local</MONGO_DATABASE>
                        </env>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>stop-it-containers</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>all</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration combine.children="append">
              <environmentVariables>
                <POSTGRESQL_HOSTPORT>localhost:5432</POSTGRESQL_HOSTPORT>
                <MONGO_HOSTPORT>localhost:27017</MONGO_HOSTPORT>
                <MONGO_DATABASE>local</MONGO_DATABASE>
              </environmentVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
              <execution>
                <id>untar-mongo-data</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <delete failonerror="false" quiet="true">
                      <fileset dir="${project.build.directory}/mongodata/"></fileset>
                    </delete>
                    <bunzip2 dest="${project.build.directory}/mongodata-tmp.tar" src="${project.basedir}/mongodata.tar.bz2"></bunzip2>
                    <untar dest="${project.build.directory}/mongodata/" src="${project.build.directory}/mongodata-tmp.tar"></untar>
                    <delete file="${project.build.directory}/mongodata-tmp.tar"></delete>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-it-containers</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <showLogs>true</showLogs>
                  <images>
                    <image>
                      <alias>postgres</alias>
                      <name>postgres:9.6</name>
                      <run>
                        <ports>
                          <port>5432:5432</port>
                        </ports>
                        <wait>
                          <log>database system is ready to accept connections</log>
                        </wait>
                      </run>
                    </image>
                    <image>
                      <alias>mongo</alias>
                      <name>mongo:3.2.6</name>
                      <run>
                        <ports>
                          <port>27017:27017</port>
                        </ports>
                        <wait>
                          <log>waiting for connections on port</log>
                        </wait>
                        <volumes>
                          <bind>
                            <volume>${project.build.directory}/mongodata:/data/db</volume>
                          </bind>
                        </volumes>
                      </run>
                    </image>
                    <image>
                      <alias>simplewebserver</alias>
                      <name>norbjd/${project.artifactId}:${project.version}</name>
                      <run>
                        <ports>
                          <port>4567:4567</port>
                        </ports>
                        <wait>
                          <log>Listening on</log>
                        </wait>
                        <links>
                          <link>mongo:mongo</link>
                        </links>
                        <env>
                          <MONGO_HOSTPORT>mongo:27017</MONGO_HOSTPORT>
                          <MONGO_DATABASE>local</MONGO_DATABASE>
                        </env>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>stop-it-containers</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
